services: 
  app:
    build:
      context: ./nodejs
      dockerfile: Dockerfile
    container_name: app
    networks:
      - app_network
    ports:
      - "3000:3000"
    working_dir: /usr/src/app
    volumes: 
      - ./nodejs:/usr/src/app
    depends_on:
      db:
        condition: service_healthy

  db:
    build:
      context: ./database
      dockerfile: Dockerfile
    container_name: db
    restart: on-failure
    networks:
      - app_network
    ports:
      - "3306:3306"
    volumes:
      - ./database/migrations:/var/lib/mysql
    environment:
      MYSQL_DATABASE: nodedb
      MYSQL_ROOT_PASSWORD: root
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 5s
      timeout: 10s
      retries: 3

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx
    networks:
      - app_network
    ports:
      - "8080:80"
    volumes:
      - ./nginx:/etc/nginx/conf.d
    depends_on:
      - app

networks:
  app_network:
    driver: bridge